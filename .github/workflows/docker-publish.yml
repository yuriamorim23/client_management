name: Build and Push Docker Images for Backend and Database

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  REGISTRY: docker.io
  BACKEND_IMAGE_NAME: yuritech/client-management-backend
  DB_IMAGE_NAME: yuritech/localhost

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Build the backend project using Maven
        run: mvn clean package -DskipTests

      - name: Build and push Backend Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}:latest

      - name: Create Dockerfile for MySQL
        run: |
          echo "FROM mysql:8.0" > Dockerfile-db
          echo "ENV MYSQL_ROOT_PASSWORD=123" >> Dockerfile-db
          echo "ENV MYSQL_DATABASE=client_management" >> Dockerfile-db

      - name: Build and push MySQL Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile-db
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.DB_IMAGE_NAME }}:latest

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.20.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Deploy with Docker Compose
        run: docker-compose up -d
